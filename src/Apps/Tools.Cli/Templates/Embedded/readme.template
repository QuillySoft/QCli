# {{ProjectName}}

{{#if Description}}
{{Description}}
{{/if}}

A modern {{ProjectType}} architecture project built with .NET 8 and QCLI.

## 🚀 Quick Start

```powershell
# Generate CRUD operations
qcli add Order --all

# Preview changes first  
qcli add Product --all --dry-run

# Check project health
qcli doctor
```

## 📁 Project Structure

```
src/
├── Core/
│   ├── Domain/              # Entities and business logic
│   └── Application/         # Commands, queries, DTOs
├── Infra/
│   └── Persistence/         # Data access configurations
└── Apps/
    └── Api/                 # REST controllers

tests/
├── Application/             # Unit tests
└── Infra/                   # Integration tests
```

## ⚙️ Available Commands

| Command | Description | Example |
|---------|-------------|---------|
| `qcli add <Entity> --all` | Generate complete CRUD | `qcli add Customer --all` |
| `qcli add <Entity> --create` | Generate create operation | `qcli add Product --create` |
| `qcli config show` | View current configuration | `qcli config show` |
| `qcli doctor` | Diagnose project issues | `qcli doctor` |

## 🔧 Entity Types

- `--entity-type Entity` - Basic entity with Id
- `--entity-type Audited` - Includes audit fields (CreatedAt, UpdatedAt)
- `--entity-type FullyAudited` - Includes soft delete (IsDeleted)

## 📝 After Generation

1. Add entity to DbContext: `public DbSet<Entity> Entities { get; set; }`
2. Register configuration: `modelBuilder.ApplyConfiguration(new EntityConfiguration())`
3. Add permissions to PermissionsProvider
4. Create migration: `dotnet ef migrations add AddEntity`

---

Generated by [QCLI](https://github.com/QuillySoft/QCli) - Stop writing boilerplate, start building features! 🚀
